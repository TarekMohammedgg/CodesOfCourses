#include<iostream>
#include<string>
#include<string.h>
using namespace std; 
// stack 
template <class t > 
class stack {
private : 
	struct node {
		t value;
		node* next;};
	node* top, * cur;
public : 
	stack() : top(nullptr) { } 
	bool isempty() {
		return top == nullptr; 	}
	void push(t item) {
		
			node* itemptr = new node;
			itemptr->value = item;
			itemptr->next = top;
			top = itemptr;
		}
	void pop() {
		if (isempty())
			cout << "stack is empty now , please try again" << endl;
		else {
			
				node* temp = top;
				top = top->next;
				temp = temp->next = NULL;
				delete temp;
			
		}
	}
	void pop(t buffer) {
		if (isempty())
			cout << "stack is empty now , please try again" << endl;
		else {
			node* temp = top;
			buffer = temp->value;
			top = top->next;
			temp = temp->next = NULL;
			delete temp;
		}
	}
	void GetTop(t& T) {
		if (isempty())
			cout << "stack is empty now , please try again" << endl;
		else {
			T = top->value;
		}
	}
				void display() {
					cur = top; 
					while (cur != nullptr) {
						cout << cur->value <<"[To-Do]"<< endl;
						cur = cur->next; 
					}

				} 



};
int main() {
	stack<string> s; 
	// task project 
	
	string str; 
	char c  ,stat; 
	do {
		getline(cin, str);
		s.push(str);
		cout << "enter the statue : "; 
		cin >> stat; 
		if (stat == 'd' || stat == 'D')
			s.pop();
		else
			getline(cin, str);  
		cout << "exit?"; 
		cin >> c; 
		if (c == 'y')
			break;
		else
			getline(cin, str); 
	} while (true);
	s.display(); 


}