#include<iostream>
using namespace std ;
template <class t>
class stack {
private:
    struct node {
        t value ;
        node * next ;
        };
        node *top , *cur ;
public :
    stack() : top(NULL) {}


    void push(t item) { // push function
        node*itemptr  = new node ;
        itemptr->value = item;
        itemptr->next = top ;
        top = itemptr ;
    }
    bool isempty () {
    return top== NULL ;
    }
    void pop () {
    if (isempty () ) {
        cout<<"stack is empty " <<endl;
    }else {
        node*temp = top ;
        top = top->next ;
        delete temp  ;
        }
    }
     void pop (t*b) {
    if (isempty () ) {
        cout<<"stack is empty " <<endl;
    }else {
        node*temp = top ;
        b = temp ->value ;
        top = top->next ;
        temp = temp->next = NULL ;
        delete temp  ;
        }}
         void gettop (t*T) {
    if (isempty () ) {
        cout<<"stack is empty " <<endl;
    }else {
        T = top->value;
        }
    }
    void display () {
        cur = top ;
    while (cur!=NULL){
            cout<<cur->value<<endl ;
            cur = cur->next ;
    }


    }
};
int main(){
int y =0 ;
stack <int > s ;
s.push(10) ;
s.push(11) ;
s.pop() ;
s.push(12) ;
s.display() ;
return 0; }
