#include<iostream>
using namespace std ;
class LinkedList {
struct Node {
int item ;
Node * next ;

};
Node * first , *last ;
int length ;
public:
    LinkedList (){first = last = NULL ;
    length = 0 ; }
    bool isempty () {
    return length == 0  ; }
    void inserfirst (int element ) {
        Node * newnode = new Node ;
        newnode ->item = element ;
        if (isempty()){
            first = last = newnode  ;
            newnode -> next = NULL ; }

        else {
            newnode->next = first ;
            first = newnode ;
        }length++ ;
    }
    void inserlast (int element ) {
     Node * newnode = new Node ;
        newnode ->item = element ;
        if (isempty()){
            first = last = newnode  ;
            newnode -> next = NULL ; }
        else
        {
            last->next = newnode ;
            newnode ->next = NULL ;
            last = newnode ;
        }length ++ ;

    }
    void insertAtPos (int pos , int ele) {
    Node*cur , * newnode  = new Node ;
    newnode ->item = ele ;
    if (pos==0)
        inserfirst(ele) ;
    else if (pos==length )
        inserlast(ele) ;
    else {for (int i = 1 ; i<pos; i++){
        cur = cur->next ;

    }
    newnode->next = cur->next ;
    cur->next = newnode ;

    length ++ ;

    } }
    void print () {
    Node*cur = first ;
    while (cur!=NULL){
        cout<<cur->item<<endl ;
        cur = cur->next ;
    }
   }

};


int main(){
LinkedList l ;
l.inserfirst(10) ;
l.inserfirst(11) ;
l.inserfirst(12) ;
l.insertAtPos(1,15)  ;
l.print () ;

return 0 ; }
